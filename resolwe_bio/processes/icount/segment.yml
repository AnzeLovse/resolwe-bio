- slug: icount-segment
  name: iCount segment
  description: Parse genome annotation, into internal iCount format.
  category: analyses:icount
  version: 1.0.0
  type: data:annotation:gtf:icount
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: "resolwe/bio-linux8-resolwe-preview:icount"
  data_name: "iCount-segment ({{annotation.gtf.file|basename|default('?')}})"
  persistence: CACHED
  input:
  - name: annotation
    label: GTF file with annotation.
    type: data:annotation:gtf
  - name: genome
    label: Data object containing genome (only fai file is used).
    type: data:seq:nucleotide
  - name: report_progress
    label: Switch to print progress to stdout.
    type: basic:boolean
    default: false
  output:
  - name: gtf
    label: Segmented file, of custom iCount format.
    type: basic:file
  - name: types_length
    label: File with lengths of regions and subregions (used for iCount annotate)
    type: basic:file
  - name: fai
    label: File with lengths of chromosomes.
    type: basic:file
  - name: source
    label: Gene ID source
    type: basic:string
  run:
    language: bash
    runtime: polyglot
    program: |
      iCount segment {{annotation.gtf.file}} segmentation.gtf {{genome.fai.file}} \
        {% if report_progress %} --report_progress {% endif %}
      re-checkrc
      gzip segmentation.gtf
      re-save-file gtf segmentation.gtf.gz


      cut -f1,2 {{genome.fai.file}} > chrom_lenghts.txt
      re-save-file fai chrom_lenghts.txt
      # Make also types_length_file:
      python3 -c 'from iCount.analysis.summary import make_types_length_file; \
          make_types_length_file("segmentation.gtf.gz", \
                                 "chrom_lenghts.txt", \
                                 out_file="types_length.txt")' \

      re-checkrc
      re-save-file types_length types_length.txt
      re-save source {{annotation.source}}
